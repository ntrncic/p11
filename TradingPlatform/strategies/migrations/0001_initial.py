# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-12 18:41
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Stopped', 'Stopped')], max_length=20)),
                ('outstanding', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ParentOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('Buy', 'Buy'), ('Sell', 'Sell'), ('Short', 'Short')], max_length=10)),
                ('bias', models.CharField(choices=[('Long', 'Long'), ('Short', 'Short'), ('Neutral', 'Neutral')], max_length=10)),
                ('bias_net', models.DecimalField(decimal_places=2, max_digits=10)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10)),
                ('limit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('num_slices', models.IntegerField()),
                ('pl', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_orders', to='strategies.Exchange')),
            ],
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Slice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SliceDelay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unfilled', models.DecimalField(decimal_places=2, max_digits=10)),
                ('filled', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SliceLiftHit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activate', models.BooleanField(default=False)),
                ('delay', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SlicePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_data_point', models.CharField(choices=[('BEST BID', 'BEST BID'), ('BEST OFFER', 'BEST OFFER'), ('LAST', 'LAST'), ('OPEN', 'OPEN'), ('DAILY HIGH', 'DAILY HIGH'), ('DAILY LOW', 'DAILY LOW'), ('DAILY NET PRICE', 'DAILY NET PRICE'), ('MTD NET PRICE', 'MTD NET PRICE'), ('NUMBER', 'NUMBER')], max_length=20)),
                ('offset_type', models.CharField(choices=[('P', '%'), ('C', 'cents')], max_length=10)),
                ('offset_num', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='slicelifthit',
            name='lh_price',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lift_hits', to='strategies.SlicePrice'),
        ),
        migrations.AddField(
            model_name='slice',
            name='lift_hit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='strategies.SliceLiftHit'),
        ),
        migrations.AddField(
            model_name='slice',
            name='parent_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slices', to='strategies.ParentOrder'),
        ),
        migrations.AddField(
            model_name='slice',
            name='price',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='strategies.SlicePrice'),
        ),
        migrations.AddField(
            model_name='parentorder',
            name='security',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_orders', to='strategies.Security'),
        ),
        migrations.AddField(
            model_name='parentorder',
            name='strategy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_orders', to='strategies.Strategy'),
        ),
        migrations.AddField(
            model_name='order',
            name='parent_order',
            field=models.ManyToManyField(to='strategies.ParentOrder'),
        ),
        migrations.AddField(
            model_name='order',
            name='slices',
            field=models.ManyToManyField(to='strategies.Slice'),
        ),
    ]
